// main.scss or App.scss
@use '../variables' as v; // Import your variables partial
@import 'leaflet/dist/leaflet.css';

                            /* General Body Styles */
body {
  background-color: v.$bg-primary;
  color: v.$text-primary;
  line-height: 1.6;
  margin: 0;
  padding: 0;
  box-sizing: border-box; // Good practice for consistent box model
}


/* Link Styles */
a {
  color: v.$primary-pink;
  text-decoration: none;
  transition: color v.$transition-speed ease;

  &:hover {
    color: darken(v.$primary-pink, 15%); // Darken the link color on hover
  text-decoration: underline;
  }
}

/* Button Styles (Example) */
.button {
  display: inline-block;
  padding: 0.8em 1.5em;
  border: none;
  border-radius: v.$border-radius;
  cursor: pointer;
  font-size: 1rem;
  text-align: center;
  text-decoration: none; // Ensure no underline for button links
transition: background-color v.$transition-speed ease, color v.$transition-speed ease;

  &--primary {
    background-color: v.$primary-pink;
    color: v.$text-light;

    &:hover {
      background-color: lighten(v.$primary-pink, 10%); // Lighten on hover
    color: v.$text-light;
    }
  }

  &--secondary {
    background-color: v.$blue-grey-sky;
    color: v.$text-light;

    &:hover {
      background-color: darken(v.$blue-grey-sky, 10%);
    }
  }

// You can add more button styles here
}

/* Layout/Section Styles (Examples) */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: v.$spacing-unit * 2;
}

.section {
  padding: v.$spacing-unit * 2 0;
  margin-bottom: v.$spacing-unit * 2;

  &--hero {
    background-color: v.$bg-hero;
    color: v.$text-light;
    text-align: center;
    padding: v.$spacing-unit * 6 0;
  }

  &--light {
    background-color: v.$bg-section-light;
  }

  &--pink {
    background-color: v.$bg-section-pink;
  }
}

// Add any other global styles you need